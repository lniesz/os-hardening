---

- name: Run OpenSCAP check
  hosts: all
  vars:
    secret_key: "{{ github_token_owner }}"
    git: "{{ git_token_path }}"
    git_repo_url: "{{ git_repo }}"
    token: "{{ lookup('hashi_vault', 'secret=kv/data/git:data')[secret_key] }}"
  pre_tasks:
    - name: Install Pip
      yum: 
        name: python-pip
        state: present
      tags:
        - pre
    - name: Install ansible pip dependencies for Ansible
      pip:
        name: 
          - pip<21
          - psycopg2-binary
          - boto
          - hvac
          - hvac[parser]    
      tags:
        - pre
  tasks:
    - name: Copy base C2S  RHEL7 XCCDF files to hosts
      get_url:
        url: http://192.168.8.248/ssg-rhel7-ds-1.2.xml
        dest: /tmp/ssg-rhel7-ds-1.2.xml
        mode: '0400'
      tags:
        - skip
    - name: Copy customization C2S  RHEL7 XCCDF files to hosts
      get_url:
        url: http://192.168.8.248/ssg-rhel7-ds-1-tailoring.xml
        dest: /tmp/ssg-rhel7-ds-1-tailoring.xml
        mode: '0400'
      tags:
        - skip
    - name: Run evaluation and store result and report files
      shell: |
        oscap xccdf eval --tailoring-file /tmp/ssg-rhel7-ds-1-tailoring.xml \
        --profile xccdf_org.ssgproject.content_profile_C2S --results-arf /tmp/{{ ansible_hostname }}-arf.xml \
        --results /tmp/{{ ansible_hostname }}-results.xml --report /tmp/{{ ansible_hostname }}-report.html \
        --oval-results --progress /tmp/ssg-rhel7-ds-1.2.xml > /tmp/{{ ansible_hostname }}-oval-results.txt 2>/dev/null
      ignore_errors: yes
      tags:
        - skip
    - name: Create Ansible playbook from results
      shell: |
        oscap xccdf generate fix --fix-type ansible \
        --result-id "" \
        --output /tmp/{{ ansible_hostname }}-ssg-rhel7-ds-playbook-result.yml \
        /tmp/{{ ansible_hostname }}-results.xml
      tags:
        - skip
    - name: Encode result file
      shell: cat /tmp/{{ ansible_hostname }}-oval-results.txt|base64 -w 0
      register: results
      no_log: true
    - name: Encode report file
      shell: cat /tmp/{{ ansible_hostname }}-report.html|base64 -w 0
      register: report
      no_log: true
    - name: Upload results to git
      uri:
        url: {{ git_repo_url }}/results/{{ ansible_hostname }}-{{ ansible_date_time.epoch }}-oval-results.txt
        method: PUT
        headers:
          Authorization: "Token {{ token }}"
        status_code: 
          - 200
          - 201
        body_format: json
        body: '{"message": "Oval results for {{ ansible_hostname }}", "content": "{{ results.stdout }}"}'
      no_log: true
    - name: Upload report to git
      uri:
        url: {{ git_repo_url }}/results/{{ ansible_hostname }}-{{ ansible_date_time.epoch }}-report.html
        method: PUT
        headers:
          Authorization: "Token {{ token }}"
        status_code:
          - 200
          - 201
        body_format: json
        body: '{"message": "Report for {{ ansible_hostname }}","content": "{{ report.stdout }}"}'
      no_log: true
